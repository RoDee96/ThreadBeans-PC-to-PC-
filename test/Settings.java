
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Rohit
 */
public class Settings extends javax.swing.JFrame {

    /**
     * Creates new form Settings
     */
    public Settings() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        browseButton = new javax.swing.JButton();
        lanRadio = new javax.swing.JRadioButton();
        wifiRadio = new javax.swing.JRadioButton();
        checkbox = new javax.swing.JCheckBox();
        ipField = new javax.swing.JTextField();
        okayButton = new javax.swing.JButton();
        ConnectionTLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        headerLabel = new javax.swing.JLabel();
        imageLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        browseButton.setText("Browse");
        browseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseButtonActionPerformed(evt);
            }
        });
        getContentPane().add(browseButton);
        browseButton.setBounds(250, 50, 110, 40);

        buttonGroup1.add(lanRadio);
        lanRadio.setText("LAN");
        lanRadio.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                lanRadioStateChanged(evt);
            }
        });
        getContentPane().add(lanRadio);
        lanRadio.setBounds(180, 110, 51, 25);

        buttonGroup1.add(wifiRadio);
        wifiRadio.setText("Wi-Fi");
        wifiRadio.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                wifiRadioStateChanged(evt);
            }
        });
        getContentPane().add(wifiRadio);
        wifiRadio.setBounds(180, 150, 59, 25);

        checkbox.setText("Enter IP manully");
        checkbox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                checkboxStateChanged(evt);
            }
        });
        checkbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxActionPerformed(evt);
            }
        });
        getContentPane().add(checkbox);
        checkbox.setBounds(20, 200, 150, 25);

        ipField.setText("192.168.1.0");
        ipField.setEnabled(false);
        getContentPane().add(ipField);
        ipField.setBounds(20, 240, 190, 30);

        okayButton.setText("Okay");
        getContentPane().add(okayButton);
        okayButton.setBounds(20, 290, 340, 40);

        ConnectionTLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ConnectionTLabel.setText("Connection Type: ");
        getContentPane().add(ConnectionTLabel);
        ConnectionTLabel.setBounds(20, 110, 180, 22);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Change storage location:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(20, 60, 220, 22);

        headerLabel.setFont(new java.awt.Font("Tahoma", 1, 26)); // NOI18N
        headerLabel.setText("Settings");
        getContentPane().add(headerLabel);
        headerLabel.setBounds(20, 10, 120, 30);

        imageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Lan.jpg"))); // NOI18N
        getContentPane().add(imageLabel);
        imageLabel.setBounds(0, 0, 390, 350);

        setSize(new java.awt.Dimension(405, 396));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void checkboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxActionPerformed
        if(checkbox.isSelected() == true){
            ipField.setEnabled(true);
        }
        else{
            ipField.setEnabled(false);
        }
    }//GEN-LAST:event_checkboxActionPerformed

    private void browseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseButtonActionPerformed
        jfc = new JFileChooser();
        jfc.setCurrentDirectory(new java.io.File("."));
        jfc.setDialogTitle("Choose a Folder");
        jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        jfc.setAcceptAllFileFilterUsed(false);

        if(jfc.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            System.out.println("getSelectedFile() : " + jfc.getSelectedFile());
            MainFrame.storageLocation = jfc.getSelectedFile()+"/";
        }
        else{
            System.out.println("No Selection");
        }
    }//GEN-LAST:event_browseButtonActionPerformed

    private void checkboxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_checkboxStateChanged
        if(checkbox.isSelected() == true){
            ipField.setEnabled(true);
        }
        else{
            ipField.setEnabled(false);
        }
    }//GEN-LAST:event_checkboxStateChanged

    private void lanRadioStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_lanRadioStateChanged
        if(lanRadio.isSelected()){
            try {
                Runtime.getRuntime().exec("netsh interface ip set address name=\"Ethernet\" static 192.168.1.0");
                for(int i = 1; i<10; i++){
                    Runtime.getRuntime().exec("netsh interface ip set address name=\"Ethernet"+" "+i+"\""+" static 192.168.1."+i);
                }
                
                Runtime.getRuntime().exec("netsh interface ip set address name=\"Wi-fi\" dhcp");
                for(int i = 1; i<10; i++){
                    Runtime.getRuntime().exec("netsh interface ip set address name=\"Wi-fi"+" "+i+"\""+" dhcp");
                }
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_lanRadioStateChanged

    private void wifiRadioStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_wifiRadioStateChanged
        if(wifiRadio.isSelected()){
            try {
                Runtime.getRuntime().exec("netsh interface ip set address name=\"Wi-fi\" static 192.168.1.0 ");
                for(int i = 1; i<10; i++){
                    Runtime.getRuntime().exec("netsh interface ip set address name=\"Wi-fi"+" "+i+"\""+" static 192.168.1."+i);
                }
                
                Runtime.getRuntime().exec("netsh interface ip set address name=\"Ethernet\" dhcp");
                for(int i = 1; i<10; i++){
                    Runtime.getRuntime().exec("netsh interface ip set address name=\"Ethernet"+" "+i+"\""+" dhcp");
                }
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_wifiRadioStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Settings().setVisible(true);
            }
        });
    }
    static JFileChooser jfc;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ConnectionTLabel;
    private javax.swing.JButton browseButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox checkbox;
    private javax.swing.JLabel headerLabel;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JTextField ipField;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JRadioButton lanRadio;
    private javax.swing.JButton okayButton;
    private javax.swing.JRadioButton wifiRadio;
    // End of variables declaration//GEN-END:variables
}
